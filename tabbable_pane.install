<?php

/**
 * Implements hook_install().
 */
function tabbable_pane_install() {
  tabbable_pane_create_field_bases();
  tabbable_pane_create_field_instances();
}

/**
 * Implements hook_install().
 */
function tabbable_pane_schema() {
  $schema['tabbable_pane'] = array(
    'description' => 'The main store for our entity',
    'fields' => array(
      'id' => array(
        'description' => 'Primary key for our table of tabbable pane',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'The {users}.uid that creates this tabbable pane.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'type' => array(
        'description' => 'The type of tabbable pane.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'reusable' => array(
        'description' => 'Whether or not this entity will appear in the Add Content dialog.',
        'type' => 'int',
        'size' => 'tiny',
      ),
      'admin_title' => array(
        'description' => 'The title it will appear in the Add Content dialog as.',
        'type' => 'varchar',
        'length' => 255,
      ),
      'category' => array(
        'description' => 'The category it will appear in the Add Content dialog under.',
        'type' => 'text',
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the entity was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the entity was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('id'),
    'indexes' => array(
      'reusable' => array('reusable'),
    ),
  );
  return $schema;
}

/**
 * Create fields base for tabbable pane entity & field collection.
 * Base on features export values
 */
function tabbable_pane_create_field_bases() {
  $field_bases = array();

  // Exported field_base: 'field_tabbable_pane_tab_content'
  $field_bases['field_tabbable_pane_tab_content'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_tabbable_pane_tab_content',
    'foreign keys' => array(
      'format' => array(
        'columns' => array(
          'format' => 'format',
        ),
        'table' => 'filter_format',
      ),
    ),
    'indexes' => array(
      'format' => array(
        0 => 'format',
      ),
    ),
    'locked' => 0,
    'module' => 'text',
    'settings' => array(),
    'translatable' => 0,
    'type' => 'text_long',
  );

  // Exported field_base: 'field_tabbable_pane_tab_title'
  $field_bases['field_tabbable_pane_tab_title'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_tabbable_pane_tab_title',
    'foreign keys' => array(
      'format' => array(
        'columns' => array(
          'format' => 'format',
        ),
        'table' => 'filter_format',
      ),
    ),
    'indexes' => array(
      'format' => array(
        0 => 'format',
      ),
    ),
    'locked' => 0,
    'module' => 'text',
    'settings' => array(
      'max_length' => 255,
    ),
    'translatable' => 0,
    'type' => 'text',
  );

  // Exported field_base: 'field_tabbable_pane_tabs'
  $field_bases['field_tabbable_pane_tabs'] = array(
    'active' => 1,
    'cardinality' => -1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_tabbable_pane_tabs',
    'foreign keys' => array(),
    'indexes' => array(
      'revision_id' => array(
        0 => 'revision_id',
      ),
    ),
    'locked' => 0,
    'module' => 'field_collection',
    'settings' => array(
      'hide_blank_items' => 1,
      'path' => '',
    ),
    'translatable' => 0,
    'type' => 'field_collection',
  );
  foreach ($field_bases as $name => $field_base) {
    $field = field_info_field($name);
    if (empty($field)) {
      field_create_field($field_base);
    }
  }
}

/**
 * Create field instances for tabbable pane entity & field collection.
 * Base on features export values
 */
function tabbable_pane_create_field_instances() {
  $field_instances = array();

  // Exported field_instance: 'field_collection_item-field_tabbable_pane_tabs-field_tabbable_pane_tab_content'
  $field_instances['field_collection_item-field_tabbable_pane_tabs-field_tabbable_pane_tab_content'] = array(
    'bundle' => 'field_tabbable_pane_tabs',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 1,
      ),
    ),
    'entity_type' => 'field_collection_item',
    'field_name' => 'field_tabbable_pane_tab_content',
    'label' => 'Description',
    'required' => 0,
    'settings' => array(
      'text_processing' => 1,
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'rows' => 5,
      ),
      'type' => 'text_textarea',
      'weight' => 2,
    ),
  );

  // Exported field_instance: 'field_collection_item-field_tabbable_pane_tabs-field_tabbable_pane_tab_title'
  $field_instances['field_collection_item-field_tabbable_pane_tabs-field_tabbable_pane_tab_title'] = array(
    'bundle' => 'field_tabbable_pane_tabs',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'field_collection_item',
    'field_name' => 'field_tabbable_pane_tab_title',
    'label' => 'Title',
    'required' => 0,
    'settings' => array(
      'text_processing' => 0,
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'size' => 60,
      ),
      'type' => 'text_textfield',
      'weight' => 1,
    ),
  );

  // Exported field_instance: 'tabbable_pane-tabbable_pane-field_tabbable_pane_tabs'
  $field_instances['tabbable_pane-tabbable_pane-field_tabbable_pane_tabs'] = array(
    'bundle' => 'tabbable_pane',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'field_collection',
        'settings' => array(
          'add' => 'Add',
          'delete' => 'Delete',
          'description' => TRUE,
          'edit' => 'Edit',
          'view_mode' => 'full',
        ),
        'type' => 'field_collection_view',
        'weight' => 1,
      ),
    ),
    'entity_type' => 'tabbable_pane',
    'field_name' => 'field_tabbable_pane_tabs',
    'label' => 'Tabs',
    'required' => 0,
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 0,
      'module' => 'field_collection',
      'settings' => array(),
      'type' => 'field_collection_embed',
      'weight' => 2,
    ),
  );
  
  foreach ($field_instances as $name => $field_instance) {
    list($entity_type, $bundle, $field_name) = explode('-', $name);
    $instance = field_info_instance($entity_type, $field_name, $bundle);
    if (empty($instance)) {
      field_create_instance($field_instance);
    }
  }
}